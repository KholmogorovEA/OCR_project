# from email.message import EmailMessage

# from pydantic import EmailStr
# from app.sql.model import Case, Subscription

# from app.config import settings


# def send_to_email(case_data: dict, email_to: EmailStr) -> EmailMessage:
#     """
#     –§–æ—Ä–º–∏—Ä—É–µ—Ç email —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –¥–µ–ª–µ.

#     :param case_data: –î–∞–Ω–Ω—ã–µ –æ –¥–µ–ª–µ.
#     :param email_to: Email –ø–æ–ª—É—á–∞—Ç–µ–ª—è.
#     :return: –û–±—ä–µ–∫—Ç EmailMessage.
#     """
#     email = EmailMessage()

#     # –ó–∞–≥–æ–ª–æ–≤–∫–∏ –ø–∏—Å—å–º–∞
#     email["Subject"] = f"üîî –ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ –¥–µ–ª–µ {case_data.get('case_number', 'N/A')}"
#     email["From"] = settings.SMTP_USER
#     email["To"] = email_to

#     # –¢–µ–ª–æ –ø–∏—Å—å–º–∞
#     email.set_content(
#         f"""
#         <h1>–ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ –¥–µ–ª–µ {case_data.get('case_number', 'N/A')}</h1>
#         <p>–ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å: {case_data.get('State', '–Ω–µ —É–∫–∞–∑–∞–Ω')}</p>
#         <p>–î–∞—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è: {case_data.get('last_updated', 'N/A')}</p>
#         """,
#         subtype="html"
#     )

#     return email